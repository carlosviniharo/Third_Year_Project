|     Function                                 |     Goal                                                                                                                                                                                                                                                                                                                                                     |     Comments   on utils transfer function                                                                  |     Comments   on control Transfer function                                                                                                          |
|----------------------------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|------------------------------------------------------------------------------------------------------------|------------------------------------------------------------------------------------------------------------------------------------------------------|
|     astf()                                   |     Return a   transfer function object                                                                                                                                                                                                                                                                                                                      |     Works for   deadtime as well                                                                           |     No   solution.                                                                                                                                   |
|     polylatex()                              |     Return   latex representation of a polynomial                                                                                                                                                                                                                                                                                                            |     N/A                                                                                                    |     N/A                                                                                                                                              |
|     circle()                                 |     Return the   coordinates of a circle                                                                                                                                                                                                                                                                                                                     |     N/A                                                                                                    |     N/A                                                                                                                                              |
|     RHPonly()                                |     Returns   only RHP-poles or zeros                                                                                                                                                                                                                                                                                                                        |     N/A                                                                                                    |     N/A                                                                                                                                              |
|     matrix_as_scalar()                       |     Returns a   scalar from 1x1 matrix                                                                                                                                                                                                                                                                                                                       |     N/A                                                                                                    |     N/A                                                                                                                                              |
|     scaling()                                |     Receives   symbolic matrix of plant and disturbance transfer functions as well as an array   of maximum deviations, scales plant variables according to eq () and ()                                                                                                                                                                                     |     N/A                                                                                                    |     N/A                                                                                                                                              |
|     tf_step()                                |     Validate   the step response data of a transfer function by considering dead time and   constraints. A unit step response is generated.                                                                                                                                                                                                                  |     Works for   SISO systems with deadtime                                                                 |     Doesnâ€™t   work for control tf.     Alternative: Control.step_response(). For MIMO   and SISO systems                                             |
|     common_roots_ind()                       |     Returns   the indices of common (approximately equal) roots of two polynomials                                                                                                                                                                                                                                                                           |     N/A                                                                                                    |     N/A                                                                                                                                              |
|     cancel_by_ind()                          |     Removes   roots by index, returns the number of roots that have been removed                                                                                                                                                                                                                                                                             |     N/A                                                                                                    |     N/A                                                                                                                                              |
|     polygcd()                                |     Find the   approximate Greatest Common Divisor of two polynomials                                                                                                                                                                                                                                                                                        |     N/A                                                                                                    |     N/A                                                                                                                                              |
|     polylcm()                                |     Finds the   approximate lowest common multiple of two polynomials                                                                                                                                                                                                                                                                                        |     N/A                                                                                                    |     N/A                                                                                                                                              |
|     multi_polylcm()                          |     Finds the   approximate lowest common multiple of multiple polynomials                                                                                                                                                                                                                                                                                   |     N/A                                                                                                    |     N/A                                                                                                                                              |
|     arrayfun()                               |     Recurses   down to scalar elements in A, then applies f, returning lists containing the   result                                                                                                                                                                                                                                                         |     N/A                                                                                                    |     N/A                                                                                                                                              |
|     listify():                               |     Transform   a gain value into a transfer function.                                                                                                                                                                                                                                                                                                       |     Returns a   value that can be entered to a tf as numerator or denominator when building   function.    |     Returns a   value that can be entered to a tf as numerator or denominator when building   function.                                              |
|     det()                                    |     Calculate   determinant via elementary operations                                                                                                                                                                                                                                                                                                        |     Works if   deadtimes are the same                                                                      |     Not   working properly.                                                                                                                          |
|     tf class                                 |                                                                                                                                                                                                                                                                                                                                                              |                                                                                                            |                                                                                                                                                      |
|     tf.step   ():                            |     Calculate   the time Euclid step response of a tf object.                                                                                                                                                                                                                                                                                                |     Works for   normal and tf with deadtime. Control function doesnâ€™t work with utils step.                |     Doesnâ€™t   work for control tf.     Alternative: Control.step_response(). For MIMO   and SISO systems                                             |
|     tf.lsim()                                |     Negative   step response                                                                                                                                                                                                                                                                                                                                 |     Doesnâ€™t   work for deadtime.                                                                           |     Doesnâ€™t   work for control tf.     Alternative: Control.forced_respone()                                                                         |
|     tf.inverse()                             |     The inverse   of the transfer function                                                                                                                                                                                                                                                                                                                   |     Works for deadtime.                                                                                    |     Doesnâ€™t   work for control tf.     Alternative:     1/G                                                                                          |
|     Tf.simplify()                            |     Polynomial   simplification                                                                                                                                                                                                                                                                                                                              |     Works for   deadtime                                                                                   |     Doesnâ€™t   work     Alternative:     Sympy.simplify()                                                                                             |
|     tf. Simplify_euclid()                    |     Cancels   GCD from both the numerator and denominator.             Uses the Euclidean algorithm for   polynomial gcd                                                                                                                                                                                                                                     |     Works for   deadtime                                                                                   |     No   alternative                                                                                                                                 |
|     tf.poles()                               |     Returns   poles for the system                                                                                                                                                                                                                                                                                                                           |     Works for   deadtime                                                                                   |     Doesnâ€™t   work     Alternative     G.pole() â€“   No MIMO support yet                                                                              |
|     tf.zeros()                               |     Returns   zeros for the system                                                                                                                                                                                                                                                                                                                           |     Works for   deadtime                                                                                   |     Doesnâ€™t   work     Alternative     G.zero() â€“   MIMO supported                                                                                   |
|     +, -, /, *                               |     Operations   with transfer functions                                                                                                                                                                                                                                                                                                                     |     Supported   as long as deadtime are same                                                               |     Have own   operators build in                                                                                                                    |
|     mimotf class                             |                                                                                                                                                                                                                                                                                                                                                              |                                                                                                            |                                                                                                                                                      |
|     mimotf()                                 |     Represents   MIMO transfer function matrix                                                                                                                                                                                                                                                                                                               |     Create   with deadtime                                                                                 |     Canâ€™t   create using normal control tf.     Alternative:     Control   library can create own MIMO systems using control.tf()                    |
|     mimotf.det()                             |     Returns   determinant of MIMO function                                                                                                                                                                                                                                                                                                                   |     Works if   deadtime is the same.                                                                       |     Doesnâ€™t   work     Alternative:     None                                                                                                         |
|     mimotf.poles()                           |     Returns   the poles                                                                                                                                                                                                                                                                                                                                      |     Deadtimes   must be the same.                                                                          |     G.pole()   in control library                                                                                                                    |
|     mimotf.zeros()                           |     Returns   the zeros                                                                                                                                                                                                                                                                                                                                      |     Deadtimes   must be the same.                                                                          |     No support   for MIMO function yet                                                                                                               |
|     mimotf.cofactor_mat()                    |     Returns   cofactor matrix                                                                                                                                                                                                                                                                                                                                |     Works for deadtimes                                                                                    |     No   solution or alternative                                                                                                                     |
|     mimotf.inverse()                         |     Returns   inverse for system                                                                                                                                                                                                                                                                                                                             |     Deadtimes   must be the same                                                                           |     No   solution or alternative                                                                                                                     |
|     mimotf.step()                            |     Calculate   the time domain step response of a mimotf object.                                                                                                                                                                                                                                                                                            |     Works for   normal and tf with deadtime.                                                               |     Doesnâ€™t   work for control tf.     Alternative: Control.step_response(). For MIMO   and SISO systems                                             |
|     mimotf.add_deadtime()                    |     Adds   deadtime to transfer functions within a mimotf.                                                                                                                                                                                                                                                                                                   |     Works for   deadtime as well                                                                           |     No   alternative or solution                                                                                                                     |
|     mimotf.add_padeapprox_deadtime()         |     Adds first   order pade deadtime approx to transfer functions within a mimotf.                                                                                                                                                                                                                                                                           |     Works for   deadtime system as well.                                                                   |     Doesnâ€™t   work for control tf     Alternative: Control.pade().                                                                                   |
|     +, -, /, *                               |     Operations   with transfer functions                                                                                                                                                                                                                                                                                                                     |     Supported   as long as deadtime are same                                                               |     Has own   operators build in                                                                                                                     |
|     Chapter 2                                |                                                                                                                                                                                                                                                                                                                                                              |                                                                                                            |                                                                                                                                                      |
|     gaintf()                                 |     Transforms   gain value into a transfer function                                                                                                                                                                                                                                                                                                         |     Returns a utils.tf                                                                                     |     N/A                                                                                                                                              |
|     findst()                                 |     Find S and   T given a value for G and K.                                                                                                                                                                                                                                                                                                                |     Doesnâ€™t   work with utils tf.      Requires   numpy array matrix                                       |     Doesnâ€™t   work with control tf.      Requires   numpy array matrix                                                                               |
|     phase()                                  |     Return the   phase angle in degrees or radians                                                                                                                                                                                                                                                                                                           |     Works for   SISO case with deadtime as well                                                            |     Works for   SISO case                                                                                                                            |
|     feedback():                              |     Defined   for use in connect function  Calculates   a feedback loop This version is for transfer function objects         Negative feedback is assumed, use   positive=True for positive feedback         Forward refers to the function that goes   out of the comparator         Backward refers to the function that goes   into the comparator       |     Works   without deadtime include                                                                       |     The answer   differ from utils.      Alternative     Can use   control.feedback() as alternative                                                 |
|     omega():                                 |     Convenience   wrapper         Defines the frequency range for   calculation of frequency response         Frequency in rad/time where time is the   time unit used in the model.                                                                                                                                                                         |                                                                                                            |                                                                                                                                                      |
|     freq()                                   |     Calculate   the frequency response for an optimisation problem                                                                                                                                                                                                                                                                                           |     Works for   SISO and MIMO                                                                              |     Works for   control functions.                                                                                                                   |
|     margins()                                |     Calculates   the gain and phase margins, together with the gain and phase crossover   frequency for a plant model                                                                                                                                                                                                                                        |     Correctly   calculates for tf.                                                                         |     Works for   control. But values are incorrect.      Alternative:     Control.margin(mag,   phase, omega) works . get values from control.bode    |
|     marginsclosedloop():                     |     Calculates   the gain and phase margins, together with the gain and phase crossover   frequency for a control model                                                                                                                                                                                                                                      |     Works for   cases that donâ€™t include deadtime                                                          |     Works for   control. But values are incorrect.      Alternative:     Control.margin(mag,   phase, omega) works . get values from control.bode    |
|     Wp():                                    |     Computes   the magnitude of the performance weighting function. Based on Equation 2.105   (p62).                                                                                                                                                                                                                                                         |     N/A                                                                                                    |     N/A                                                                                                                                              |
|     maxpeak():                               |     Computes   the maximum bode magnitude peak of a transfer function                                                                                                                                                                                                                                                                                        |     Works for   siso systems with deadtime include                                                         |     Works for   control library                                                                                                                      |
|     ControllerTuning():                      |     Calculates   either the Ziegler-Nichols or Tyreus-Luyben    tuning parameters for a PI controller based on the continuous  cycling method.                                                                                                                                                                                                               |     Works for   siso system                                                                                |     Works but   with slight deviations from utils values                                                                                             |
|     Chapter 3                                |                                                                                                                                                                                                                                                                                                                                                              |                                                                                                            |                                                                                                                                                      |
|     sym2mimotf()                             |     Converts a   MIMO transfer function system in sympy.Matrix form to a    mimotf object making use of individual tf   objects.                                                                                                                                                                                                                             |     N/A                                                                                                    |     N/A                                                                                                                                              |
|     mimotf2sym()                             |     Converts a   mimotf object making use of individual tf objects to a transfer function   system in sympy.Matrix form                                                                                                                                                                                                                                      |     Works for   systems with deadtime as well                                                              |     No   solution or alternative                                                                                                                     |
|     RGA()                                    |     Computes   the RGA (Relative Gain Array) of a matrix.                                                                                                                                                                                                                                                                                                    |     Works with   numpy.matrix. Or MIMO tf with values                                                      |     No   solution or alternative. Or MIMO tf with values                                                                                             |
|     RGAnumber()                              |     Computes   the RGA (Relative Gain Array) number of a matrix.                                                                                                                                                                                                                                                                                             |     Works with   numpy.matrix Or MIMO tf with values                                                       |     No   solution or alternative. Or MIMO tf with values                                                                                             |
|     IterRGA()                                |     Computes   the n'th iteration of the RGA.                                                                                                                                                                                                                                                                                                                |     Works with   numpy.matrix Or MIMO tf with values                                                       |     No   solution or alternative Or MIMO tf with values                                                                                              |
|     sigmas():                                |     Returns the   singular values of A state space matrix                                                                                                                                                                                                                                                                                                    |     Utils.tf2ss()                                                                                          |     Get   statespace from control.tf2ss()                                                                                                            |
|     sv_dir()                                 |     Returns   the input and output singular vectors associated with the minimum and maximum   singular values.                                                                                                                                                                                                                                               |     Works for   MIMO system with deadtime                                                                  |     Works for control   MIMO system                                                                                                                  |
|     SVD                                      |     Returns   the singular values (Sv) as well as the input and output         singular vectors (V and U respectively).                                                                                                                                                                                                                                      |     Works for   MIMO system with deadtime                                                                  |     Works for   MIMO system with deadtime                                                                                                            |
|     feedback_mimo()                          |     Calculates   a feedback loop transfer function, and returns it as a mimotf object. Currently   functionality allows for a controller with proportional  gain.                                                                                                                                                                                            |     Works for   system if deadtimes are the same. Works without deadtime                                   |     No working   solution. Control.feedback() only implemented for SISO systems.                                                                     |
|     Chapter 4                                |                                                                                                                                                                                                                                                                                                                                                              |                                                                                                            |                                                                                                                                                      |
|     min_max_sigma()                          |     Returns   maximum or minimum singular value at the frequencies in w.                                                                                                                                                                                                                                                                                     |     Works for   systems with deadtimes as well                                                             |     Works for   control MIMO systems                                                                                                                 |
|     tf2ss()                                  |     Converts a   mimotf object to the controllable canonical form state space representation.   This method and the examples were obtained from course work notes available   at     http://www.egr.msu.edu/classes/me851/jchoi/lecture/Lect_20.pdf     which   appears to derive the method from "A Linear Systems Primer"  by Antsaklis and Birkhauser.    |     Currently   not working                                                                                |     Not   working      Alternative:     control.tf2ss()                                                                                              |
|     state_observability()                    |     This   method checks if the state space description of the system is state observable   according to Definition 4.2.                                                                                                                                                                                                                                     |     Works with   state space models (utils.tf2ss())                                                        |     Works with   state space models (control.tf2ss())     Alternative:     Control.obsv()                                                            |
|     state_controllability()                  |     This   method checks if the state space description of the system is state   controllable according to Definition 4.1 (p127).                                                                                                                                                                                                                            |     Works with   state space models (utils.tf2ss())                                                        |     Works with   state space models (control.tf2ss()).     Alternative:     Control.ctrb()                                                           |
|     state_observability_matrix()             |     calculate   the observability matrix                                                                                                                                                                                                                                                                                                                     |     Works with   state space models (utils.tf2ss())                                                        |     Works with   state space models (control.tf2ss())                                                                                                |
|     kalman_controllable()                    |     Computes   the Kalman Controllable Canonical Form of the input system A, B, C, making   use of QR Decomposition. Can be used in sequentially with kalman_observable   to obtain a minimal realisation.                                                                                                                                                   |     Works with   state space models (utils.tf2ss())                                                        |     Works with   state space models (control.tf2ss())                                                                                                |
|     kalman_observable()                      |     Computes   the Kalman Observable Canonical Form of the input system  A, B, C, making use of QR Decomposition.   Can be used in sequentially  with   kalman_controllable to obtain a minimal realisation.                                                                                                                                                 |     Works with   state space models (utils.tf2ss())                                                        |     Works with   state space models (control.tf2ss())                                                                                                |
|     minimal_realisation()                    |     This   function will obtain a minimal realisation for a state space model in the   form given in Skogestad second edition p 119 equations 4.3 and 4.4                                                                                                                                                                                                    |     Works with   state space models (utils.tf2ss())                                                        |     Works with   state space models (control.tf2ss())     Alternative:     Control.minreal                                                           |
|     is_min_realisation()                     |     Checks if   the state space description is minimal realization                                                                                                                                                                                                                                                                                           |     Works with   state space models (utils.tf2ss())                                                        |     Works with   state space models (control.tf2ss())                                                                                                |
|     num_denom()                              |     Returns   the numerators and denomenators of functions                                                                                                                                                                                                                                                                                                   |     Works for   MIMO and SISO cases                                                                        |     Doesnâ€™t   work for control tf                                                                                                                    |
|     minors()                                 |     Returns   the order minors of a MIMO tf G.                                                                                                                                                                                                                                                                                                               |     Deadtime   needs to be same                                                                            |     Doesnâ€™t   work for control MIMO                                                                                                                  |
|     lcm_of_all_minors()                      |     Returns   the lowest common multiple of all minors of G                                                                                                                                                                                                                                                                                                  |     Deadtime   needs to be same                                                                            |     Doesnâ€™t   work for control MIMO                                                                                                                  |
|     poles_and_zeros_of_square_tf_matrix()    |     Determine   poles and zeros of a square mimotf matrix, making use of the determinant. This   method may fail in special cases. If terms cancel out during calculation of   the determinant, not all poles and zeros will be determined.                                                                                                                  |     Works for   most cases                                                                                 |     Doesnâ€™t   work for control MIMO     Alternative:     Control.pole()     Control.zero()                                                           |
|     pole_zero_directions()                   |     Crude   method to calculate the input and output direction of a pole or zero, from   the SVD.                                                                                                                                                                                                                                                            |     Requires   numpy.matrix input                                                                          |     Requires   numpy.matrix input                                                                                                                    |
|     zero_directions_ss()                     |     This   function calculates the zeros with input and output directions from a state   space representation using the method outlined on pg. 140                                                                                                                                                                                                           |     Works with   state space models (utils.tf2ss())                                                        |     Works with   state space models (control.tf2ss())                                                                                                |
|     Chapter 6                                |                                                                                                                                                                                                                                                                                                                                                              |                                                                                                            |                                                                                                                                                      |
|     BoundST()                                |     This   function will calculate the minimum peak values of S and T if the system has   zeros and poles in the input or output. For standard conditions Equation 6.8   (p224) is applied. Equation 6.16 (p226) is used when deadtime is included.                                                                                                          |     Works for   MIMO system. Requires numpy.matrix input                                                   |     Doesnâ€™t   work for control MIMO system.     Requires   numpy.matrix input                                                                        |
|     BoundKS()                                |     The   function uses equation 6.24 (p229) to calculate the peak value for KS transfer   function using the stable version of the plant.                                                                                                                                                                                                                   |     Works for   MIMO system. Requires numpy.matrix input                                                   |     Doesnâ€™t   work for control MIMO system.     Requires   numpy.matrix input                                                                        |
|     distRej()                                |     Convenience   wrapper for calculation of \|\|gd\|\|2 (equation 6.42, p238) and the disturbance   condition number (equation 6.43) for each disturbance.                                                                                                                                                                                                  |     Requires   numpy.matrix input                                                                          |     Requires   numpy.matrix input                                                                                                                    |
|     distRHPZ()                               |     Applies   equation 6.48 (p239) for performance requirements imposed by disturbances.   Calculate the system's zeros alignment with the disturbance  matrix.                                                                                                                                                                                              |     Requires   numpy.matrix input                                                                          |     Requires   numpy.matrix input                                                                                                                    |
|     ssr_solve()                              |     Solves the   zeros and poles of a state-space representation of a system.                                                                                                                                                                                                                                                                                |     Works with   state space models (utils.tf2ss())                                                        |     Works with   state space models (control.tf2ss())                                                                                                |